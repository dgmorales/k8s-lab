# https://taskfile.dev

version: '3'

vars:
  cluster_mgmt: lab-mgmt
  cluster_dev: lab-dev-0
  cluster_prod0: lab-prod-0
  cluster_prod1: lab-prod-1

tasks:
  setup-tools:
    desc: Install/update local tools used by the tasks, on $HOME/bin by default. Run "task --summary setup-tools" for details.
    summary: |
      Install/update local tools used by the tasks, on $HOME/bin by default.

      You can pass the bin path as argument to override it: task setup-local-tools --bin /path/to/bindir.
      The rest of the tasks will assume the directory is on your $PATH, you have to make sure of that.
    vars:
      clusterctl_version: v1.10.3
      argocd_version: v2.14.9
      cilium_version: v0.18.5
      bindir: '{{ .CLI_ARGS | default (expandenv "$HOME/bin") }}'
    prompt: This will download and install tools binaries in {{ .bindir }}. Run "task --summary setup-local-tools" for details. Continue?
    cmds:
      - curl -L https://github.com/kubernetes-sigs/cluster-api/releases/download/{{ .clusterctl_version }}/clusterctl-{{ OS }}-{{ ARCH }} -o {{ .bindir }}/clusterctl
      - chmod +x {{ .bindir }}/clusterctl
      - curl -L https://github.com/argoproj/argo-cd/releases/download/{{ .argocd_version }}/argocd-{{ OS }}-{{ ARCH }} -o {{ .bindir }}/argocd
      - chmod +x {{ .bindir }}/argocd
      - curl -L https://github.com/cilium/cilium-cli/releases/download/{{ .cilium_version }}/cilium-{{ OS }}-{{ ARCH }}.tar.gz | tar -xzf - -C {{ .bindir }}
      - chmod +x {{ .bindir }}/cilium

  setup-lab:
    cmds:
      - task: mgmt-create
      # - task: cilium:install
      # - task: cilium:install-ui
      - task: argocd:install
      - task: addons-init
      - task: clusterapi:init
     # - task: clusterapi:create-clusters

  addons-init:
    # Install the addons-manager app-of-apps in ArgoCD. From there on, it will manage itself.
    # One of the addons installed by the manager is the actions-runner-controller. It
    # requires a secret (controller-manager) so it can register runners for this repo
    # (or any other repo).

    # So the ARC_TOKEN environment variable must contain a personal access token with
    # permissions to create runners for this repo. For a fine grained token, add
    # repository permissions:
    #   - Read access to actions and metadata
    #   - Read and Write access to administration
    requires:
      vars:
        - ARC_TOKEN
    cmds:
      - kubectl --context kind-{{ .cluster_mgmt }} create namespace actions-runner-system || true
      - kubectl --context kind-{{ .cluster_mgmt }} create secret generic controller-manager -n actions-runner-system --from-literal=github_token=${ARC_TOKEN}
      - kubectl --context kind-{{ .cluster_mgmt }} apply -f addons/argocd-apps/addons-manager.yaml

  mgmt-create:
    dir: ./setup
    cmds:
      - kind create cluster --name {{.cluster_mgmt}} --config kind-config.yaml

  destroy-clusters:
    cmds:
      - kind delete cluster --name {{.cluster_mgmt}}
      - kind delete cluster --name {{.cluster_dev}}
      - kind delete cluster --name {{.cluster_prod0}}
      - kind delete cluster --name {{.cluster_prod1}}

  port-forward:
    deps:
      - argocd:port-forward
      - cilium:port-forward

includes:
  argocd:
    taskfile: ./addons/manifests/argocd
    dir: ./addons/manifests/argocd
  cilium:
    taskfile: ./setup/Taskfile.cilium.yml
    dir: ./setup/cilium
  clusterapi:
    taskfile: ./setup/clusterapi
    dir: ./setup/clusterapi
  demo-cilium:
    taskfile: ./demos/cilium/Taskfile.yml
    dir: ./demos/cilium
