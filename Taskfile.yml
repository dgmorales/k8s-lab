# https://taskfile.dev

version: '3'

vars:
  cluster_mgmt: lab-mgmt
  cluster_dev: lab-dev-0
  cluster_prod0: lab-prod-0
  cluster_prod1: lab-prod-1

tasks:
  setup-local-tools:
    cmds:
      - echo install/update clusterctl
      - echo install/update argocd cli
      - echo install/update cilium cli?

  setup-lab:
    cmds:
      - task: mgmt-create
      - task: cilium:install
      - task: cilium:install-ui
      - task: argocd:install
      - task: addons-init
     # - task: clusterapi:init
     # - task: clusterapi:create-clusters

  addons-init:
    # Install the addons-manager app-of-apps in ArgoCD. From there on, it will manage itself.
    # One of the addons installed by the manager is the actions-runner-controller. It
    # requires a secret (controller-manager) so it can register runners for this repo
    # (or any other repo).

    # So the ARC_TOKEN environment variable must contain a personal access token with
    # permissions to create runners for this repo. For a fine grained token, add
    # repository permissions:
    #   - Read access to actions and metadata
    #   - Read and Write access to administration
    requires:
      vars:
        - ARC_TOKEN
    cmds:
      - kubectl create namespace actions-runner-system || true
      - kubectl create secret generic controller-manager -n actions-runner-system --from-literal=github_token=${ARC_TOKEN}
      - kubectl apply -f addons/argocd-apps/addons-manager.yaml

  mgmt-create:
    dir: ./setup
    cmds:
      - kind create cluster --name {{.cluster_mgmt}} --config kind-config.yaml

  destroy-clusters:
    cmds:
      - kind delete cluster --name {{.cluster_mgmt}}
      - kind delete cluster --name {{.cluster_dev}}
      - kind delete cluster --name {{.cluster_prod0}}
      - kind delete cluster --name {{.cluster_prod1}}

  port-forward:
    deps:
      - argocd:port-forward
      - cilium:port-forward

includes:
  argocd:
    taskfile: ./addons/manifests/argocd
    dir: ./addons/manifests/argocd
  cilium:
    taskfile: ./Taskfile.cilium.yml
    dir: ./setup/cilium
  clusterapi:
    taskfile: ./setup/clusterapi
    dir: ./setup/clusterapi
  demo-cilium:
    taskfile: ./demos/cilium/Taskfile.yml
    dir: ./demos/cilium
